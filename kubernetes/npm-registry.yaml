---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: npm-registry
  namespace: npm-registry
spec:
  storageClassName: rook-block
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi

---
apiVersion: v1
kind: Service
metadata:
  name: npm-registry
  namespace: npm-registry
  # labels:
  #   app: npm-registry
spec:
  # clusterIP: ""
  ports:
    - port: 4873
      targetPort: 4873
      protocol: TCP
      # name: ""
  selector:
    app: npm-registry
  type: ClusterIP

---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  namespace: npm-registry
  labels:
    app: npm-registry
  name: npm-registry
spec:
  selector:
    matchLabels:
      app: npm-registry
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      # annotations:
      #   checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      labels:
        app: npm-registry
    spec:
      containers:
        - name: verdaccio
          image: verdaccio/verdaccio:2.7.3
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 4873
          livenessProbe:
            httpGet:
              path: /
              port: 4873
            initialDelaySeconds: 5
          readinessProbe:
            httpGet:
              path: /
              port: 4873
            initialDelaySeconds: 5
          resources: {}
          volumeMounts:
            - mountPath: /verdaccio/storage
              name: storage
              readOnly: false
            - mountPath: /verdaccio/conf
              name: config
              readOnly: true
      # Allow non-root user to access PersistentVolume
      securityContext:
        fsGroup: 1000
      volumes:
      - name: config
        configMap:
          name: npm-registry
          # volumes:
          # #  - name: nothing
          # #    emptyDir: {}
      - name: storage
        persistentVolumeClaim:
          claimName: npm-registry
        # emptyDir: {}
      nodeSelector: {}
